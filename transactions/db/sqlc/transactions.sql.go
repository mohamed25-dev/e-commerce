// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: transactions.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createTransaction = `-- name: CreateTransaction :one
INSERT INTO transactions (
    id,
    customer_id,
    product_id,
    quantity,
    total_price
) VALUES (
  $1, $2, $3, $4, $5
) RETURNING id, customer_id, product_id, quantity, total_price, created_at
`

type CreateTransactionParams struct {
	ID         string
	CustomerID string
	ProductID  string
	Quantity   int32
	TotalPrice pgtype.Numeric
}

func (q *Queries) CreateTransaction(ctx context.Context, arg CreateTransactionParams) (Transaction, error) {
	row := q.db.QueryRow(ctx, createTransaction,
		arg.ID,
		arg.CustomerID,
		arg.ProductID,
		arg.Quantity,
		arg.TotalPrice,
	)
	var i Transaction
	err := row.Scan(
		&i.ID,
		&i.CustomerID,
		&i.ProductID,
		&i.Quantity,
		&i.TotalPrice,
		&i.CreatedAt,
	)
	return i, err
}

const getTransactionById = `-- name: GetTransactionById :one
SELECT id, customer_id, product_id, quantity, total_price, created_at FROM transactions WHERE id = $1
`

func (q *Queries) GetTransactionById(ctx context.Context, id string) (Transaction, error) {
	row := q.db.QueryRow(ctx, getTransactionById, id)
	var i Transaction
	err := row.Scan(
		&i.ID,
		&i.CustomerID,
		&i.ProductID,
		&i.Quantity,
		&i.TotalPrice,
		&i.CreatedAt,
	)
	return i, err
}
